@using ViewModel.Customers
@model EditCustomerViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var message = TempData["Message"] as string;
}
<hr/>
<div class="container">
    <form action="/Customer/Edit" method="post">
        <h3 style="margin-top: 3em; text-align:center">Chỉnh sửa tài khoản khách hàng</h3>
        @*<div class="danger text-danger">
                @Html.ValidationSummary()
            </div>*@

        <input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />
        @if (!string.IsNullOrEmpty(message))
        {
        <div class="alert alert-success">@message</div>
        }
        <input name="Id" type="text" value="@Model.Id" hidden />
        <div class="mb-3">
            <div class="form-holder ">
                <span class="lnr lnr-lock"></span>
                @Html.LabelFor(x => x.CustomerName, new { @class = "form-label" })
                @Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control", @placeholder = "Tên khách hàng" })
            </div>
            @Html.ValidationMessageFor(x => x.CustomerName, null, new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            <div class="form-holder ">
                <span class="lnr lnr-lock"></span>
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label mr-2" })
                @Html.RadioButtonFor(model => model.Gender, false) Nam
                @Html.RadioButtonFor(model => model.Gender, true) Nữ
            </div>
        </div>
        <div class="mb-3">
            <div class="form-holder ">
                <span class="lnr lnr-lock"></span>
                @Html.LabelFor(x => x.Email, new { @class = "form-label" })
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Email", @type = "email", @oninvalid = "this.setCustomValidity('Email có định dạng name@gmail.com')", @oninput = "this.setCustomValidity('')" })
            </div>
            @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            <div class="form-holder ">
                <span class="lnr lnr-lock"></span>
                @Html.LabelFor(x => x.Phone, new { @class = "form-label" })
                @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", @placeholder = "Số điện thoại", @pattern = "[0][0-9]{9}", @oninvalid = "this.setCustomValidity('Nhập sai định dạng số điện thoại')", @oninput = "this.setCustomValidity('')" })
            </div>
            @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "text-danger" })
        </div>
        <button type="submit" class="btn btn-dark mb-5">
            <span>Chỉnh sửa</span>
        </button>
    </form>
</div>